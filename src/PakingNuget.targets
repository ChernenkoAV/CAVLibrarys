<Project>

    <PropertyGroup>
        <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <WarningLevel>5</WarningLevel>
        <WarningsAsErrors />
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <Optimize>true</Optimize>
        <DebugType>portable</DebugType>
        <AnalysisMode>AllEnabledByDefault</AnalysisMode>

        <Deterministic>false</Deterministic>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <DeterministicSourcePaths>true</DeterministicSourcePaths>

        <MonikerFile>$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</MonikerFile>

        <TargetFrameworkMonikerAssemblyAttributesPath>$(MonikerFile)</TargetFrameworkMonikerAssemblyAttributesPath>

        <Copyright>Copyright $([System.DateTime]::Now.Year)©</Copyright>

        <VersionFile>$(BaseIntermediateOutputPath)$(AssemblyName).$(PackageVersion).cs</VersionFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="*" PrivateAssets="All" />
    </ItemGroup>

    <!--Для выполнения таргетов один раз-->
    <PropertyGroup>
        <IsMultiTarget>true</IsMultiTarget>
        <IsMultiTarget Condition="'$(TargetFrameworks)' == ''">false</IsMultiTarget>

        <IsSingleTarget>true</IsSingleTarget>
        <IsSingleTarget Condition="'$(TargetFramework)' == ''">false</IsSingleTarget>

        <ShouldBeforeTargets>BeforeBuild</ShouldBeforeTargets>
        <ShouldBeforeTargets Condition="$(IsMultiTarget)">DispatchToInnerBuilds</ShouldBeforeTargets>

        <ShouldAfterTargets>AfterBuild</ShouldAfterTargets>
        <ShouldAfterTargets Condition="$(IsMultiTarget)">DispatchToInnerBuilds</ShouldAfterTargets>

        <ShouldRunTarget>false</ShouldRunTarget>
        <ShouldRunTarget Condition="(!'$(IsMultiTarget)' and '$(IsSingleTarget)') or ('$(IsMultiTarget)' and !'$(IsSingleTarget)')">true</ShouldRunTarget>
    </PropertyGroup>

    <Target Name="SetVersion" Condition="$(ShouldRunTarget)" BeforeTargets="$(ShouldBeforeTargets)">

        <Error Condition="'$(PackageVersion)' == ''" Text="Необходимо заполнить свойство PackageVersion!" />

        <PropertyGroup Condition=" '$(PackageVersion.Split(`.`)[0])' == '0' ">
            <VerAssembly>0.1.0.0</VerAssembly>
        </PropertyGroup>

        <PropertyGroup Condition=" '$(PackageVersion.Split(`.`)[0])' != '0' ">
            <VerAssembly>$(PackageVersion.Split(`.`, StringSplitOptions.None)[0]).0.0.0</VerAssembly>
        </PropertyGroup>

        <PropertyGroup>
            <VerFile>$(VerAssembly.Split(`.`)[0])$([System.DateTime]::Now.Tostring(".yyyy.MM.dd"))</VerFile>
        </PropertyGroup>

        <ItemGroup>
            <AssemblyAttributes Include="AssemblyTitle">
                <_Parameter1>$(AssemblyName)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyVersion">
                <_Parameter1>$(VerAssembly)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyFileVersion">
                <_Parameter1>$(VerFile)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyInformationalVersion">
                <_Parameter1>$(PackageVersion)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyDescription">
                <_Parameter1>$(Description)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyCopyright">
                <_Parameter1>Copyright $([System.DateTime]::Now.ToString("yyyy"))©</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyProduct">
                <_Parameter1>$(AssemblyName) $(PackageVersion)</_Parameter1>
            </AssemblyAttributes>
            <AssemblyAttributes Include="AssemblyConfiguration">
                <_Parameter1>$(Configuration)</_Parameter1>
            </AssemblyAttributes>
            <!--
            <AssemblyAttributes Include="AssemblyCompany">
                <_Parameter1>$()</_Parameter1>
            </AssemblyAttributes>
            -->
        </ItemGroup>

        <ItemGroup Condition="'$(RepositoryUrl)' != ''">
            <AssemblyAttributes Include="AssemblyMetadataAttribute">
                <_Parameter1>RepositoryUrl</_Parameter1>
                <_Parameter2>$(RepositoryUrl)</_Parameter2>
            </AssemblyAttributes>
        </ItemGroup>

        <MakeDir Directories="$(BaseIntermediateOutputPath)"/>
        <WriteCodeFragment Language="C#"
                           OutputFile="$(VersionFile)"
                           AssemblyAttributes="@(AssemblyAttributes)"/>

        <Message Text="----- Сборка $(AssemblyName): версия пакета $(PackageVersion) версия сборки $(VerAssembly) версия файла $(VerFile)" Importance="High"/>

        <ItemGroup>
            <Compile Include="$(VersionFile)"/>
        </ItemGroup>

    </Target>

    <ItemGroup Condition="!'$(ShouldRunTarget)'">
        <Compile Include="$(VersionFile)"/>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedFiles Include="$(MonikerFile)"/>
    </ItemGroup>

    <Target Name="PackNuget" Condition="$(ShouldRunTarget)" AfterTargets="$(ShouldAfterTargets)">

        <PropertyGroup Condition=" '$(OutputNuget)' == '' ">
            <OutputNuget>$([System.IO.Path]::GetPathRoot($(MSBuildProjectDirectory)))localNuget</OutputNuget>
        </PropertyGroup>

        <Message Text="----- Запуск пакетирования $(AssemblyName)" Importance="High"/>

        <Exec
            StdErrEncoding="utf-8"
            StdOutEncoding="utf-8"
            Command="dotnet pack --no-build -c $(Configuration) --force --nologo -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o &quot;$(OutputNuget)&quot;" />

    </Target>

</Project>